import java.util.*;

class Solution {
    static int answer;
    public int solution(String[][] c) {
        answer = 0;
        HashMap<String, Integer> map = new HashMap<>();
        for(int i = 0; i < c.length; i++){
            String name = c[i][0];
            String part = c[i][1];
            if(map.get(part) == null){
                map.put(part, 1);
            }else {
                map.put(part, map.get(part) + 1);
            }
        }
        int size = 0;
        for(String s : map.keySet())size++;
        int [] num = new int[size];
        int x = 0;
        for(String s : map.keySet()){
            num[x++] = map.get(s);
        } 
        for(int i = 1; i <= size; i++){
           dfs(num, i, 1, size, 0);
        }
        return answer;
    }
    static void dfs(int []num, int l, int ans, int size, int start){
        if(l > size - start)return;
        if(l == 0){
            answer += ans;
            return;
        }else if(start == size){
        }else {
            
            dfs(num, l - 1,  ans * num[start], size, start + 1);
            
            dfs(num, l ,  ans , size, start + 1);

        }
        return;
    }
}